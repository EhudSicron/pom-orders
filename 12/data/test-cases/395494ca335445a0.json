{"uid":"395494ca335445a0","name":"Test 02 login fail - non-valid user","fullName":"tests.login.test_loginfail.TestLoginFail#test_02_login_fail","historyId":"10795196f44bfe75abd34f498f8504fa","time":{"start":1760092145558,"stop":1760092147499,"duration":1941},"description":"This test check the negative login scenario - wrong user and password","descriptionHtml":"<p>This test check the negative login scenario - wrong user and password</p>\n","status":"failed","statusMessage":"AssertionError: Error is empty - login didn't fails : \n   User:standard_user, Password: secret_sauce\nassert 'Username and password do not match any user in this service' in ''","statusTrace":"self = <tests.login.test_loginfail.TestLoginFail object at 0x7f82ad887750>\nuser = 'standard_user', password = 'secret_sauce'\n\n    @pytest.mark.parametrize(\"user,password\", test_data)\n    @allure.severity(severity_level=allure.severity_level.NORMAL)\n    @allure.title(\"Test 02 login fail - non-valid user\")\n    @allure.description(\"This test check the negative login scenario - wrong user and password\")\n    @allure.story(\"Login\")\n    def test_02_login_fail(self, user, password):\n        log_test = \"Start test 2 - login\"\n        # self.login_page.login(\"standard_user1\",\"secret_sauce1\")\n        self.login_page.login(user, password)\n        log_test = \"End test 2 - login \\n\"\n        #print(\"End test 2 - login\")\n        log_test += f\"User:{user}, Password: {password}\\n\"\n        #print(f\"User:{user}, Password: {password}\")\n        error = self.login_page.error()\n        #print(f\"error:{error}\")\n        log_test += f\"error:{error}\\n\"\n>       assert \"Username and password do not match any user in this service\" in error, f\"Error is empty - login didn't fails : {error}\\n User:{user}, Password: {password}\"\nE       AssertionError: Error is empty - login didn't fails : \nE          User:standard_user, Password: secret_sauce\nE       assert 'Username and password do not match any user in this service' in ''\n\ntests/login/test_loginfail.py:29: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1760091902366,"stop":1760091902366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1760091902366,"stop":1760091902674,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type_launch_args","time":{"start":1760091902366,"stop":1760091902366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1760091902366,"stop":1760091902366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type_launch_args","time":{"start":1760091902366,"stop":1760091902366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1760091902366,"stop":1760091902366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1760091902366,"stop":1760091902366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1760091902675,"stop":1760091903012,"duration":337},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"launch_browser","time":{"start":1760091902675,"stop":1760091902675,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"connect_options","time":{"start":1760091902675,"stop":1760091902675,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type","time":{"start":1760091902675,"stop":1760091902675,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_pw_artifacts_folder","time":{"start":1760091903012,"stop":1760091903013,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760091903012,"stop":1760091903012,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_context_args","time":{"start":1760091903013,"stop":1760091903013,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_context_args","time":{"start":1760091903013,"stop":1760091903013,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"context","time":{"start":1760092145230,"stop":1760092145236,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"output_path","time":{"start":1760092145230,"stop":1760092145230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_artifacts_recorder","time":{"start":1760092145230,"stop":1760092145230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"new_context","time":{"start":1760092145230,"stop":1760092145230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page","time":{"start":1760092145236,"stop":1760092145285,"duration":49},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_page_function","time":{"start":1760092145285,"stop":1760092145557,"duration":272},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"This test check the negative login scenario - wrong user and password","status":"failed","statusMessage":"AssertionError: Error is empty - login didn't fails : \n   User:standard_user, Password: secret_sauce\nassert 'Username and password do not match any user in this service' in ''","statusTrace":"self = <tests.login.test_loginfail.TestLoginFail object at 0x7f82ad887750>\nuser = 'standard_user', password = 'secret_sauce'\n\n    @pytest.mark.parametrize(\"user,password\", test_data)\n    @allure.severity(severity_level=allure.severity_level.NORMAL)\n    @allure.title(\"Test 02 login fail - non-valid user\")\n    @allure.description(\"This test check the negative login scenario - wrong user and password\")\n    @allure.story(\"Login\")\n    def test_02_login_fail(self, user, password):\n        log_test = \"Start test 2 - login\"\n        # self.login_page.login(\"standard_user1\",\"secret_sauce1\")\n        self.login_page.login(user, password)\n        log_test = \"End test 2 - login \\n\"\n        #print(\"End test 2 - login\")\n        log_test += f\"User:{user}, Password: {password}\\n\"\n        #print(f\"User:{user}, Password: {password}\")\n        error = self.login_page.error()\n        #print(f\"error:{error}\")\n        log_test += f\"error:{error}\\n\"\n>       assert \"Username and password do not match any user in this service\" in error, f\"Error is empty - login didn't fails : {error}\\n User:{user}, Password: {password}\"\nE       AssertionError: Error is empty - login didn't fails : \nE          User:standard_user, Password: secret_sauce\nE       assert 'Username and password do not match any user in this service' in ''\n\ntests/login/test_loginfail.py:29: AssertionError","steps":[],"attachments":[{"uid":"622343341326f93a","name":"stdout","source":"622343341326f93a.txt","type":"text/plain","size":169}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup_page_function::0","time":{"start":1760092147524,"stop":1760092149525,"duration":2001},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"new_context::0","time":{"start":1760092149526,"stop":1760092149771,"duration":245},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_artifacts_recorder::0","time":{"start":1760092149772,"stop":1760092149776,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_pw_artifacts_folder::0","time":{"start":1760092149777,"stop":1760092149780,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser::0","time":{"start":1760092149780,"stop":1760092149836,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1760092149838,"stop":1760092149846,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"Login"},{"name":"severity","value":"normal"},{"name":"parentSuite","value":"tests.login"},{"name":"suite","value":"test_loginfail"},{"name":"subSuite","value":"TestLoginFail"},{"name":"host","value":"8bed976fc070"},{"name":"thread","value":"167-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.login.test_loginfail"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"},{"name":"password","value":"'secret_sauce'"},{"name":"user","value":"'standard_user'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"395494ca335445a0.json","parameterValues":["'chromium'","'secret_sauce'","'standard_user'"]}